#pragma checksum "/Users/calvinliu15/Desktop/TU Chemnitz/Semester I/AMD/AMD_Project/AMD_Project/Views/Home/FilmRatings.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "47b666dc223982064ff8de8f8816ae83287880d7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_FilmRatings), @"mvc.1.0.view", @"/Views/Home/FilmRatings.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/calvinliu15/Desktop/TU Chemnitz/Semester I/AMD/AMD_Project/AMD_Project/Views/_ViewImports.cshtml"
using AMD_Project;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/calvinliu15/Desktop/TU Chemnitz/Semester I/AMD/AMD_Project/AMD_Project/Views/_ViewImports.cshtml"
using AMD_Project.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"47b666dc223982064ff8de8f8816ae83287880d7", @"/Views/Home/FilmRatings.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0ef276933e5d2314c658c17956688671d421d756", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_FilmRatings : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "4", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "5", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "6", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "7", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "8", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "9", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "10", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("createUserForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("onload", new global::Microsoft.AspNetCore.Html.HtmlString("init()"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE HTML>\n<html>\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d77581", async() => {
                WriteLiteral(@"
    <script defer>
        var filmUserRatings = [];
        var films = {};
        var users = {};

        async function init() {
            let selUser = new SlimSelect({
                select: `#userSelect`,
            })
            let selFilm = new SlimSelect({
                select: `#filmSelect`,
            })
            initAddUserFilmRatingBtn();
            const cur_location = window.location.pathname + window.location.search;
            if (!cur_location.includes(""userId="") && !cur_location.includes(""filmId="")) {
                document.getElementById(""pageTitle"").innerHTML = ""All film ratings"";
                document.getElementById(""seeAllFilmRatings"").hidden = true;

                await $.getJSON(""/films"").done(function (data) {
                    const filmSelect = document.getElementById(""filmSelect"");
                    for (let i = 0; i < data.length; i++) {
                        films[data[i].id] = data[i].title + "" ("" + data[i].releaseYear + "")"";
                      ");
                WriteLiteral(@"  filmSelect.options[filmSelect.options.length] = new Option(data[i].title + "" ("" + data[i].releaseYear + "")"", data[i].id, true);
                    }
                })
                await $.getJSON(""/users"").done(function (data) {
                    const userSelect = document.getElementById(""userSelect"");
                    for (let i = 0; i < data.length; i++) {
                        users[data[i].id] = data[i].username;
                        userSelect.options[userSelect.options.length] = new Option(data[i].username, data[i].id, true);
                    }
                });

                await $.getJSON(""/users/filmRatings"").done(function (data) {
                    for (let i = 0; i < data.length; i++) {
                        filmUserRatings.push(data[i]);
                    }
                    const body = document.getElementsByTagName(""body"")[0];
                    for (let i = 0; i < filmUserRatings.length; i++) {
");
                WriteLiteral(@"                        const div = document.createElement(""div"");
                        const identifier = filmUserRatings[i].userId + filmUserRatings[i].filmId;
                        div.setAttribute(""id"", `editUserRatingModal${identifier}`);
                        div.setAttribute(""class"", ""modal fade"");
                        div.setAttribute(""role"", ""dialog"");
                        div.setAttribute(""aria-labelledby"", `editUserRatingModal${identifier}Label`);
                        div.setAttribute(""aria-hidden"", ""true"");
                        div.innerHTML += `
                        <div class=""modal-dialog"" role=""document"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <h5 class=""modal-title"">Edit Rating</h5>
                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                        <span aria-hidden=""true"">&ti");
                WriteLiteral(@"mes;</span>
                                    </button>
                                </div>
                                <div class=""modal-body"">
                                    <form id=""editUserRating${identifier}"" >
                                        <div class=""form-group row"">
                                            <div class=""col-sm-5 col-form-label"">Username</div>
                                            <div class=""col-sm-7 my-2"">
                                                <b>${users[filmUserRatings[i].userId]}</b>
                                            </div>
                                            <div class=""col-sm-5 col-form-label"">Film</div>
                                            <div class=""col-sm-7 my-2"">
                                                <b>${films[filmUserRatings[i].filmId]}</b>
                                            </div>
                                            <label for=""newUserRatingFor${identifier}"" class=""col-sm-5 col-f");
                WriteLiteral(@"orm-label"">Rating</label>
                                            <div class=""col-sm-7 my-2"">
                                                <select class=""form-control form-control-sm"" id=""newUserRatingFor${identifier}"">
                                                   <option>1</option><option>2</option><option>3</option><option>4</option>
                                                   <option>5</option><option>6</option><option>7</option><option>8</option>
                                                   <option>9</option><option>10</option>
                                                </select>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class=""modal-footer"">
                                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                    <butt");
                WriteLiteral(@"on type=""button"" class=""btn btn-primary"" id=""btnEditUserRating${identifier}"" data-dismiss=""modal"">Submit</button>
                                </div>
                            </div>
                        </div>`;

                        body.appendChild(div);
                        const sel = document.getElementById(""newUserRatingFor"" + identifier);
                        const opt = sel.children;
                        for (var j = 0; j < 10; j++) {
                            if (opt[j].innerHTML == filmUserRatings[i].filmRating) {
                                opt[j].selected = true;
                                break;
                            }
                        }

                        const div2 = document.createElement(""div"");
                        div2.setAttribute(""id"", `removeUserRatingModal${identifier}`);
                        div2.setAttribute(""class"", ""modal fade"");
                        div2.setAttribute(""role"", ""dialog"");
                        div2.setAttri");
                WriteLiteral(@"bute(""aria-labelledby"", `removeUserRatingModal${identifier}Label`);
                        div2.setAttribute(""aria-hidden"", ""true"");
                        div2.innerHTML += `
                            <div class=""modal-dialog"" role=""document"">
                                <div class=""modal-content"">
                                    <div class=""modal-header"">
                                        <h5 class=""modal-title"">Remove Rating</h5>
                                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                            <span aria-hidden=""true"">&times;</span>
                                        </button>
                                    </div>
                                    <div class=""modal-body"">
                                         Are you sure? Rating from user <b>${users[filmUserRatings[i].userId]}</b> for film <b>${films[filmUserRatings[i].filmId]}</b> will be removed!</b>
                          ");
                WriteLiteral(@"          </div>
                                    <div class=""modal-footer"">
                                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                        <button type=""button"" class=""btn btn-primary"" id=""btnRemoveUserRating${identifier}"" data-dismiss=""modal"">Submit</button>
                                    </div>
                                </div>
                            </div>`;

                        body.appendChild(div2);

                        var tbody = ""<tr>"";
                        tbody += `<td><a href=""/Home/FilmRatings?userId=${filmUserRatings[i].userId}""><b id=""userId${identifier}"">` + users[filmUserRatings[i].userId] + ""</b></a></td>"";
                        tbody += `<td><a href=""/Home/FilmRatings?filmId=${filmUserRatings[i].filmId}""><b id=""filmId${identifier}"">` + films[filmUserRatings[i].filmId] + ""</b></a></td>"";
                        tbody += `<td><b id=""filmRating${identifier}"">` +");
                WriteLiteral(@" filmUserRatings[i].filmRating + ""</b></td>"";
                        tbody += `<td><button class=""btn btn-primary btn-lg btn-block"" data-toggle=""modal"" data-target=""#editUserRatingModal${identifier}"">Edit Rating</button>
                        <button class=""btn btn-outline-danger btn-lg btn-block"" data-toggle=""modal"" data-target=""#removeUserRatingModal${identifier}"">Remove Rating</button></td></tr>`
                        $(""#filmRatingTable tbody"").append(tbody);

                        document.getElementById(""btnEditUserRating"" + identifier).addEventListener('click', function () {
                            $.post(`/user/userRating?userId=${filmUserRatings[i].userId}&filmId=${filmUserRatings[i].filmId}`, { rating: document.getElementById(""newUserRatingFor"" + identifier).value }, function (res) {
                                filmUserRatings[i].filmRating = res.filmRating;
                                document.getElementById(""filmRating"" + identifier).innerHTML = res.filmRating;
                 ");
                WriteLiteral(@"           }).fail(function (e) {
                                alert(`Failed to process the request! ${e.responseText}`);
                            });
                        });

                        document.getElementById(""btnRemoveUserRating"" + identifier).addEventListener('click', function () {
                            $.delete(`/user/userRating?userId=${filmUserRatings[i].userId}&filmId=${filmUserRatings[i].filmId}`, function (res) {
                                if (res) {
                                    document.location.reload();
                                } else {
                                    alert('Failed to remove this rating!');
                                }
                            });
                        });
                    }
                    $('#filmRatingTable').DataTable();
                });
            } else if (cur_location.includes(""userId="")) {
");
                WriteLiteral(@"                const userId = cur_location.split(""?userId="")[1];

                await $.getJSON(""/users/"" + userId).done(function (data) {
                    const userSelect = document.getElementById(""userSelect"");
                    users[data.id] = data.username;
                    userSelect.options[userSelect.options.length] = new Option(data.username, data.id, true);
                    document.getElementById(""aubutton"").innerHTML += "" from "" + data.username;
                });

                await $.getJSON(""/films"").done(function (data) {
                    const filmSelect = document.getElementById(""filmSelect"");
                    for (let i = 0; i < data.length; i++) {
                        films[data[i].id] = data[i].title + "" ("" + data[i].releaseYear + "")"";
                        filmSelect.options[filmSelect.options.length] = new Option(data[i].title + "" ("" + data[i].releaseYear + "")"", data[i].id, true);
                    }
                });

                const thUsername =");
                WriteLiteral(@" document.getElementsByTagName(""th"")[0];
                thUsername.remove();

                await $.getJSON(`/users/filmRatings?userId=${userId}`).done(function (data) {
                    for (let i = 0; i < data.length; i++) {
                        filmUserRatings.push(data[i]);
                    }

                    const body = document.getElementsByTagName(""body"")[0];
                    for (let i = 0; i < filmUserRatings.length; i++) {
                        const div = document.createElement(""div"");
                        const identifier = filmUserRatings[i].userId + filmUserRatings[i].filmId;
                        div.setAttribute(""id"", `editUserRatingModal${identifier}`);
                        div.setAttribute(""class"", ""modal fade"");
                        div.setAttribute(""role"", ""dialog"");
                        div.setAttribute(""aria-labelledby"", `editUserRatingModal${identifier}Label`);
                        div.setAttribute(""aria-hidden"", ""true"");
                        di");
                WriteLiteral(@"v.innerHTML += `
                        <div class=""modal-dialog"" role=""document"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <h5 class=""modal-title"">Edit Rating</h5>
                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                        <span aria-hidden=""true"">&times;</span>
                                    </button>
                                </div>
                                <div class=""modal-body"">
                                    <form id=""editUserRating${identifier}"" >
                                        <div class=""form-group row"">
                                            <div class=""col-sm-5 col-form-label"">Username</div>
                                            <div class=""col-sm-7 my-2"">
                                                <b>${users[filmUserRatings[i].userId]}</b>
        ");
                WriteLiteral(@"                                    </div>
                                            <div class=""col-sm-5 col-form-label"">Film</div>
                                            <div class=""col-sm-7 my-2"">
                                                <b>${films[filmUserRatings[i].filmId]}</b>
                                            </div>
                                            <label for=""newUserRatingFor${identifier}"" class=""col-sm-5 col-form-label"">Rating</label>
                                            <div class=""col-sm-7 my-2"">
                                                <select class=""form-control form-control-sm"" id=""newUserRatingFor${identifier}"">
                                                   <option>1</option><option>2</option><option>3</option><option>4</option>
                                                   <option>5</option><option>6</option><option>7</option><option>8</option>
                                                   <option>9</option><option>10</option>
   ");
                WriteLiteral(@"                                             </select>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class=""modal-footer"">
                                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                    <button type=""button"" class=""btn btn-primary"" id=""btnEditUserRating${identifier}"" data-dismiss=""modal"">Submit</button>
                                </div>
                            </div>
                        </div>`
                        body.appendChild(div);
                        const sel = document.getElementById(""newUserRatingFor"" + identifier);
                        const opt = sel.children;
                        for (var j = 0; j < 10; j++) {
                            if (opt[j].innerHTML == filmUserRatings[i].filmRating) {
                ");
                WriteLiteral(@"                opt[j].selected = true;
                                break;
                            }
                        }

                        const div2 = document.createElement(""div"");
                        div2.setAttribute(""id"", `removeUserRatingModal${identifier}`);
                        div2.setAttribute(""class"", ""modal fade"");
                        div2.setAttribute(""role"", ""dialog"");
                        div2.setAttribute(""aria-labelledby"", `removeUserRatingModal${identifier}Label`);
                        div2.setAttribute(""aria-hidden"", ""true"");
                        div2.innerHTML += `
                            <div class=""modal-dialog"" role=""document"">
                                <div class=""modal-content"">
                                    <div class=""modal-header"">
                                        <h5 class=""modal-title"">Remove Rating</h5>
                                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close");
                WriteLiteral(@""">
                                            <span aria-hidden=""true"">&times;</span>
                                        </button>
                                    </div>
                                    <div class=""modal-body"">
                                         Are you sure? Rating from user <b>${users[filmUserRatings[i].userId]}</b> for film <b>${films[filmUserRatings[i].filmId]}</b> will be removed!</b>
                                    </div>
                                    <div class=""modal-footer"">
                                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                        <button type=""button"" class=""btn btn-primary"" id=""btnRemoveUserRating${identifier}"" data-dismiss=""modal"">Submit</button>
                                    </div>
                                </div>
                            </div>`;

                        body.appendChild(div2);

                        var tbody ");
                WriteLiteral(@"= ""<tr>"";
                        tbody += `<td><a href=""/Home/FilmRatings?filmId=${filmUserRatings[i].filmId}""><b id=""filmId${identifier}"">` + films[filmUserRatings[i].filmId] + ""</b></a></td>"";
                        tbody += `<td><b id=""filmRating${identifier}"">` + filmUserRatings[i].filmRating + ""</b></td>"";
                        tbody += `<td><button class=""btn btn-primary btn-lg btn-block"" data-toggle=""modal"" data-target=""#editUserRatingModal${identifier}"">Edit Rating</button>
                        <button class=""btn btn-outline-danger btn-lg btn-block"" data-toggle=""modal"" data-target=""#removeUserRatingModal${identifier}"">Remove Rating</button></td></tr>`
                        $(""#filmRatingTable tbody"").append(tbody);

                        document.getElementById(""btnEditUserRating"" + identifier).addEventListener('click', function () {
                            $.post(`/user/userRating?userId=${filmUserRatings[i].userId}&filmId=${filmUserRatings[i].filmId}`, { rating: document.getElementByI");
                WriteLiteral(@"d(""newUserRatingFor"" + identifier).value }, function (res) {
                                filmUserRatings[i].filmRating = res.filmRating;
                                document.getElementById(""filmRating"" + identifier).innerHTML = res.filmRating;
                            }).fail(function (e) {
                                alert(`Failed to process the request! ${e.responseText}`);
                            });
                        });

                        document.getElementById(""btnRemoveUserRating"" + identifier).addEventListener('click', function () {
                            $.delete(`/user/userRating?userId=${filmUserRatings[i].userId}&filmId=${filmUserRatings[i].filmId}`, function (res) {
                                if (res) {
                                    document.location.reload();
                                } else {
                                    alert('Failed to remove this rating!');
                                }
                            });
         ");
                WriteLiteral(@"               });
                    }
                    $('#filmRatingTable').DataTable();
                });
                document.getElementById(""pageTitle"").innerHTML = `Film Ratings by <span class=""text-danger"">` + users[userId] + ""</span>"";
            } else {
");
                WriteLiteral(@"                const filmId = cur_location.split(""?filmId="")[1];
                await $.getJSON(""/users"").done(function (data) {
                    const userSelect = document.getElementById(""userSelect"");
                    for (let i = 0; i < data.length; i++) {
                        users[data[i].id] = data[i].username;
                        userSelect.options[userSelect.options.length] = new Option(data[i].username, data[i].id, true);
                    }
                });

                await $.getJSON(`/films/${filmId}`).done(function (data) {
                    const filmSelect = document.getElementById(""filmSelect"");
                    films[data.id] = data.title + "" ("" + data.releaseYear + "")"";
                    filmSelect.options[filmSelect.options.length] = new Option(data.title + "" ("" + data.releaseYear + "")"", data.id, true);
                    document.getElementById(""aubutton"").innerHTML += "" for "" + films[data.id];
                    document.getElementById(""pageTitle"").inner");
                WriteLiteral(@"HTML = `Film Ratings for <span><a class=""text-info"" href=""/Home/FilmCrews?filmId=${data.id}"">` + films[filmId] + ""</a></span>"";
                });

                const thFilm = document.getElementsByTagName(""th"")[1];
                thFilm.remove();

                await $.getJSON(`/users/filmRatings?filmId=${filmId}`).done(function (data) {
                   for (let i = 0; i < data.length; i++) {
                        filmUserRatings.push(data[i]);
                    }

                   const body = document.getElementsByTagName(""body"")[0];
                   for (let i = 0; i < filmUserRatings.length; i++) {
                        const div = document.createElement(""div"");
                        const identifier = filmUserRatings[i].userId + filmUserRatings[i].filmId;
                        div.setAttribute(""id"", `editUserRatingModal${identifier}`);
                        div.setAttribute(""class"", ""modal fade"");
                        div.setAttribute(""role"", ""dialog"");
                     ");
                WriteLiteral(@"   div.setAttribute(""aria-labelledby"", `editUserRatingModal${identifier}Label`);
                        div.setAttribute(""aria-hidden"", ""true"");
                        div.innerHTML += `
                        <div class=""modal-dialog"" role=""document"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <h5 class=""modal-title"">Edit Rating</h5>
                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                        <span aria-hidden=""true"">&times;</span>
                                    </button>
                                </div>
                                <div class=""modal-body"">
                                    <form id=""editUserRating${identifier}"" >
                                        <div class=""form-group row"">
                                            <div class=""col-sm-5 col-form-label"">Username</div>");
                WriteLiteral(@"
                                            <div class=""col-sm-7 my-2"">
                                                <b>${users[filmUserRatings[i].userId]}</b>
                                            </div>
                                            <div class=""col-sm-5 col-form-label"">Film</div>
                                            <div class=""col-sm-7 my-2"">
                                                <b>${films[filmUserRatings[i].filmId]}</b>
                                            </div>
                                            <label for=""newUserRatingFor${identifier}"" class=""col-sm-5 col-form-label"">Rating</label>
                                            <div class=""col-sm-7 my-2"">
                                                <select class=""form-control form-control-sm"" id=""newUserRatingFor${identifier}"">
                                                   <option>1</option><option>2</option><option>3</option><option>4</option>
                                            ");
                WriteLiteral(@"       <option>5</option><option>6</option><option>7</option><option>8</option>
                                                   <option>9</option><option>10</option>
                                                </select>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                                <div class=""modal-footer"">
                                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                    <button type=""button"" class=""btn btn-primary"" id=""btnEditUserRating${identifier}"" data-dismiss=""modal"">Submit</button>
                                </div>
                            </div>
                        </div>`
                        body.appendChild(div);
                        const sel = document.getElementById(""newUserRatingFor"" + identifier);
                        const opt ");
                WriteLiteral(@"= sel.children;
                        for (var j = 0; j < 10; j++) {
                            if (opt[j].innerHTML == filmUserRatings[i].filmRating) {
                                opt[j].selected = true;
                                break;
                            }
                        }

                        const div2 = document.createElement(""div"");
                        div2.setAttribute(""id"", `removeUserRatingModal${identifier}`);
                        div2.setAttribute(""class"", ""modal fade"");
                        div2.setAttribute(""role"", ""dialog"");
                        div2.setAttribute(""aria-labelledby"", `removeUserRatingModal${identifier}Label`);
                        div2.setAttribute(""aria-hidden"", ""true"");
                        div2.innerHTML += `
                            <div class=""modal-dialog"" role=""document"">
                                <div class=""modal-content"">
                                    <div class=""modal-header"">
                         ");
                WriteLiteral(@"               <h5 class=""modal-title"">Remove Rating</h5>
                                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                            <span aria-hidden=""true"">&times;</span>
                                        </button>
                                    </div>
                                    <div class=""modal-body"">
                                         Are you sure? Rating from user <b>${users[filmUserRatings[i].userId]}</b> for film <b>${films[filmUserRatings[i].filmId]}</b> will be removed!</b>
                                    </div>
                                    <div class=""modal-footer"">
                                        <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                                        <button type=""button"" class=""btn btn-primary"" id=""btnRemoveUserRating${identifier}"" data-dismiss=""modal"">Submit</button>
                               ");
                WriteLiteral(@"     </div>
                                </div>
                            </div>`;

                        body.appendChild(div2);

                        var tbody = ""<tr>"";
                        tbody += `<td><a href=""/Home/FilmRatings?userId=${filmUserRatings[i].userId}""><b id=""userId${identifier}"">` + users[filmUserRatings[i].userId] + ""</b></a></td>"";
                        tbody += `<td><b id=""filmRating${identifier}"">` + filmUserRatings[i].filmRating + ""</b></td>"";
                        tbody += `<td><button class=""btn btn-primary btn-lg btn-block"" data-toggle=""modal"" data-target=""#editUserRatingModal${identifier}"">Edit Rating</button>
                        <button class=""btn btn-outline-danger btn-lg btn-block"" data-toggle=""modal"" data-target=""#removeUserRatingModal${identifier}"">Remove Rating</button></td></tr>`
                        $(""#filmRatingTable tbody"").append(tbody);

                        document.getElementById(""btnEditUserRating"" + identifier).addEventListener('click', f");
                WriteLiteral(@"unction () {
                            $.post(`/user/userRating?userId=${filmUserRatings[i].userId}&filmId=${filmUserRatings[i].filmId}`, { rating: document.getElementById(""newUserRatingFor"" + identifier).value }, function (res) {
                                filmUserRatings[i].filmRating = res.filmRating;
                                document.getElementById(""filmRating"" + identifier).innerHTML = res.filmRating;
                            }).fail(function (e) {
                                alert(`Failed to process the request! ${e.responseText}`);
                            });
                        });

                        document.getElementById(""btnRemoveUserRating"" + identifier).addEventListener('click', function () {
                            $.delete(`/user/userRating?userId=${filmUserRatings[i].userId}&filmId=${filmUserRatings[i].filmId}`, function (res) {
                                if (res) {
                                    document.location.reload();
                    ");
                WriteLiteral(@"            } else {
                                    alert('Failed to remove this rating!');
                                }
                            }).fail(function (e) {
                                alert(`Failed to process the request! ${e.responseText}`);
                            });
                        });
                    }
                    $('#filmRatingTable').DataTable();
                });
            }
        }

        function initAddUserFilmRatingBtn() {
            document.getElementById(""btnAddUserFilmRating"").addEventListener('click', function () {
                const userId = document.getElementById(""userSelect"").value;
                const filmId = document.getElementById(""filmSelect"").value;
                $.post(`/user/userRating?userId=${userId}&filmId=${filmId}`, { rating: document.getElementById(""filmRatingSelect"").value }, function (res) {

                    const isExistBefore = filmUserRatings.some(el => el.userId === userId && el.filmId === filmId");
                WriteLiteral(@");
                    if (isExistBefore) {
                        filmUserRatings[filmUserRatings.findIndex(el => el.userId === userId && el.filmId === filmId)].filmRating = res.filmRating;
                        document.getElementById(""filmRating"" + userId + filmId).innerHTML = res.filmRating;
                    } else {
                        // just reload in case it is a new rating
                        document.location.reload();
                    }
                }).fail(function (e) {
                    alert(`Failed to process the request! ${e.responseText}`);
                });
            });
        }
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d740660", async() => {
                WriteLiteral(@"
    <div>
        <h3 class=""my-3"" id=""pageTitle""></h3>
        <a class=""btn btn-outline-primary btn-sm"" id=""seeAllFilmRatings"" href=""/Home/FilmRatings"">See all film ratings</a>
    </div>
    <button type=""button"" id=""aubutton"" class=""btn btn-secondary btn-lg btn-block my-2"" data-toggle=""modal"" data-target=""#addUserRatingModal"">Add/Update film rating</button>
    <table id=""filmRatingTable"" class=""table table-bordered table-hover table-striped"" cellspacing=""0"">
        <thead>
            <tr>
                <th scope=""col"">Username</th>
                <th scope=""col"">Film (Release Year)</th>
                <th scole=""col"">Film Rating</th>
                <th scope=""col"">Actions</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <div class=""modal fade"" id=""addUserRatingModal"" role=""dialog"" aria-labelledby=""addUserRatingModalLabel"" aria-hidden=""true"">
        <div class=""modal-dialog"" role=""document"">
            <div class=""modal-content"">
                <div class=""modal-");
                WriteLiteral(@"header"">
                    <h5 class=""modal-title"">Add Film Rating</h5>
                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                        <span aria-hidden=""true"">&times;</span>
                    </button>
                </div>
                <div class=""modal-body"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d742388", async() => {
                    WriteLiteral(@"
                        <div class=""form-group row"">
                            <label for=""userSelect"" class=""col-sm-2 col-form-label my-2"">User</label>
                            <div class=""col-sm-10 my-2"">
                                <select class=""my-1"" id=""userSelect""></select>
                            </div>
                            <label for=""filmSelect"" class=""col-sm-2 col-form-label my-2"">Film</label>
                            <div class=""col-sm-10 my-2"">
                                <select class=""my-1"" id=""filmSelect""></select>
                            </div>
                            <label for=""filmRatingSelect"" class=""col-sm-2 col-form-label my-2"">Rating</label>
                            <div class=""col-sm-10 my-2"">
                                <select class=""custom-select"" id=""filmRatingSelect"">
                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d743570", async() => {
                        WriteLiteral("1");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d744871", async() => {
                        WriteLiteral("2");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d746172", async() => {
                        WriteLiteral("3");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d747473", async() => {
                        WriteLiteral("4");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d748774", async() => {
                        WriteLiteral("5");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d750075", async() => {
                        WriteLiteral("6");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                    BeginWriteTagHelperAttribute();
                    __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                    __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(" <!-- default select -->\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d751732", async() => {
                        WriteLiteral("7");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d753033", async() => {
                        WriteLiteral("8");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d754334", async() => {
                        WriteLiteral("9");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "47b666dc223982064ff8de8f8816ae83287880d755635", async() => {
                        WriteLiteral("10");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_9.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_9);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\n                                </select>\n                            </div>\n                        </div>\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    <div class=""alert alert-info"" role=""alert"">
                        <p class=""text-justify my-0"">
                            <b>
                                <u class=""py-2"">Note</u><br />
                                If a film rating already exists for the selected user-film pair,
                                this operation would instead update the previous rating instead of creating a new one!
                            </b>
                        </p>
                    </div>
                </div>
                <div class=""modal-footer"">
                    <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancel</button>
                    <button type=""button"" class=""btn btn-primary"" id=""btnAddUserFilmRating"" data-dismiss=""modal"">Submit</button>
                </div>
            </div>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
